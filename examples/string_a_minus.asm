;; name    = Convertir un string a min√∫scula y mostrar en pantalla
;; author  = Facundo Quiroga
;; date    = 2025-08-25
;; devices = keyboard, screen
;; tags = string, min√∫scula, mostrar

;Escribir un programa que lea un string, lo almacene en 
;MENSAJE y convierta todos sus car√°cteres a min√∫scula.  
;Por ejemplo, si MENSAJE contiene ‚ÄúHola, Buenas Tardes‚Äù, 
;luego de la conversi√≥n debe contener ‚Äúhola, buenas tardes‚Äù. 
;Mostrar en pantalla el mensaje luego de la conversi√≥n. 
;Para ello, debe implementar y utilizar las siguientes subrutinas:

; üìÑ ES_MAYUS ‚≠ê Recibe un car√°cter en el registro AL y retorna 
;en AH el valor 0FFh si es may√∫scula y 0 de lo contrario. 
;Pista: Los c√≥digos de las may√∫sculas son todos consecutivos. 
;Buscar en la tabla ASCII los caracteres may√∫scula, 
;y observar qu√© valores ASCII tienen la ‚ÄòA‚Äô y  la ‚ÄòZ‚Äô.
; üìÑ A_MINUS ‚≠ê Recibe un car√°cter may√∫scula en AL y lo devuelve como min√∫scula. 
;Pista: Las may√∫sculas y las min√∫sculas est√°n en el mismo orden en el ASCII, 
;y por ende la distancia entre, por ejemplo, la ‚ÄúA‚Äù y la ‚Äúa‚Äù es la misma 
;que la distancia entre la ‚ÄúZ‚Äù y la ‚Äúz‚Äù.
; üìÑ STRING_A_MINUS ‚≠ê‚≠ê Recibe la direcci√≥n de comienzo de un string en BX, 
; su longitud en AL. Recorre el string, cambiando a min√∫scula 
;las letras que sean may√∫sculas. 
;No retorna nada, sino que modifica el string directamente en la memoria.



ORG 1000H
MENSAJE db "Hola, Buenas Tardes"
FIN db ?

ORG 3700H
A_MIN: ADD AL, 20H
       RET


; es_mayus: Recibe un car√°cter en el registro AL 
; y retorna en AH el valor 0FFh si es may√∫scula y 0 de lo contrario. 

ORG 3500H  
ES_MAYUS: MOV AH, 0
          CMP AL, 'A'
          JS NO_ES
          MOV DH, 'Z'
          CMP DH, AL
          JS NO_ES
          MOV AH, 0FFH 
   NO_ES: RET


;la subrutina debe recibir en bx la dir del string
; y en al la logitud

ORG 3000H 
STRING_A_MINUS: MOV CL, AL    ;tama√±o string lo paso a cl ya que a al lo voy a necesitar
        VUELVO: MOV AL, [BX] 
                CALL ES_MAYUS
                CMP AH, 0
                JZ SIGO       ;si AH=0, entonces SIGO ya que es minuscula
                CALL A_MIN
                MOV [BX], al
          SIGO: INC BX
                DEC CL
                JNZ VUELVO
                RET
    

ORG 2000H
MOV BX, OFFSET MENSAJE
MOV AL, OFFSET FIN - OFFSET MENSAJE
CALL STRING_A_MINUS
MOV BX, OFFSET MENSAJE
MOV AL, OFFSET FIN - OFFSET MENSAJE
INT 7
INT 0
END
